[non_docstring]
instring='''x = """This
is
not a
docstring."""'''
outstring='''x = """This
is
not a
docstring."""'''

[tabbed_indentation]
instring='''def foo():
	"""
	Hello foo.
	"""
	if True:
		x = 1'''
outstring='''def foo():
	"""Hello foo."""
	if True:
		x = 1''' 

[mixed_indentation]
instring='''def foo():
	"""
	Hello foo.
	"""
	if True:
	    x = 1'''
outstring='''def foo():
	"""Hello foo."""
	if True:
	    x = 1'''

[escaped_newlines]
instring='''def foo():
    """
    Hello foo.
    """
    x = \
            1'''
outstring='''def foo():
    """Hello foo."""
    x = \
            1'''

[code_comments]
instring='''def foo():
    """
    Hello foo.
    """
    # My comment
    # My comment with escape \
    123'''
outstring='''def foo():
    """Hello foo."""
    # My comment
    # My comment with escape \
    123'''

[inline_comment]
instring='''def foo():
    """
    Hello foo.
    """
    def test_method_no_chr_92(): the501(92) # \'''
outstring='''def foo():
    """Hello foo."""
    def test_method_no_chr_92(): the501(92) # \'''

[raw_lowercase]
instring='''def foo():
    r"""
    Hello raw foo.
    """'''
outstring='''def foo():
    r"""Hello raw foo."""'''

[raw_uppercase]
instring='''def foo():
    R"""
    Hello Raw foo.
    """'''
outstring='''def foo():
    R"""Hello Raw foo."""'''

[raw_lowercase_single]
instring="""def foo():
    r'''
    Hello raw foo.
    '''"""
outstring='''def foo():
    r"""Hello raw foo."""'''

[raw_uppercase_single]
instring="""def foo():
    R'''
    Hello Raw foo.
    '''"""
outstring='''def foo():
    R"""Hello Raw foo."""'''

[unicode_lowercase]
instring='''def foo():
    u"""
    Hello unicode foo.
    """'''
outstring='''def foo():
    u"""Hello unicode foo."""'''

[unicode_uppercase]
instring='''def foo():
    U"""
    Hello Unicode foo.
    """'''
outstring='''def foo():
    U"""Hello Unicode foo."""'''

[unicode_lowercase_single]
instring="""def foo():
    u'''
    Hello unicode foo.
    '''"""
outstring='''def foo():
    u"""Hello unicode foo."""'''

[unicode_uppercase_single]
instring="""def foo():
    U'''
    Hello Unicode foo.
    '''"""
outstring='''def foo():
    U"""Hello Unicode foo."""'''

[nested_triple]
instring="""def foo():
    '''Hello foo. \"\"\"abc\"\"\"
    '''"""
outstring="""def foo():
    '''Hello foo. \"\"\"abc\"\"\"
    '''"""

[multiple_sentences]
instring='''def foo():
    """
    Hello foo.
    This is a docstring.
    """'''
outstring='''def foo():
    """Hello foo.

    This is a docstring.
    """'''

[multiple_sentences_same_line]
instring='''def foo():
    """
    Hello foo. This is a docstring.
    """'''
outstring='''def foo():
    """Hello foo.

    This is a docstring.
    """'''

[multiline_summary]
instring='''def foo():
    """
    Hello
    foo. This is a docstring.
    """'''
outstring='''def foo():
    """Hello foo.

    This is a docstring.
    """'''

[empty_lines]
instring='''def foo():
    """
    Hello
    foo and this is a docstring.

    More stuff.
    """'''
outstring='''def foo():
    """Hello foo and this is a docstring.

    More stuff.
    """'''

[class_empty_lines]
instring='''class Foo:
    """
    Hello
    foo and this is a docstring.

    More stuff.
    """'''
outstring='''class Foo:
    """Hello foo and this is a docstring.

    More stuff.
    """'''
instring_2='''def foo():
    class Foo:

        """Summary."""
        pass'''
outstring_2='''def foo():
    class Foo:
        """Summary."""
        pass'''

[method_empty_lines]
instring='''class Foo:
    def foo(self):


        """Summary."""
        pass'''
outstring='''class Foo:
    def foo(self):
        """Summary."""
        pass'''

[trailing_whitespace]
instring='''def foo():
    """
    Hello
    foo and this is a docstring.	

    More stuff.	
    """'''
outstring='''def foo():
    """Hello foo and this is a docstring.

    More stuff.
    """'''

[parameter_list]
instring='''def foo():
    """Test
    one - first
    two - second
    """'''
outstring='''def foo():
    """Test.

    one - first
    two - second
    """'''

[single_quote]
instring="""def foo():
    'Just a regular string'
"""
outstring="""def foo():
    'Just a regular string'
"""

[double_quote]
instring="""def foo():
    "Just a regular string"
"""
outstring="""def foo():
    "Just a regular string"
"""

[nested_triple_quote]
instring='''def foo():
    'Just a """foo""" string'
'''
outstring='''def foo():
    'Just a """foo""" string'
'''

[first_line_assignment]
instring='''def foo():
    x = """Just a regular string. Alpha."""
'''
outstring='''def foo():
    x = """Just a regular string. Alpha."""
'''

[regular_strings]
instring='''def foo():
    """
    Hello
    foo and this is a docstring.

    More stuff.
    """
    x = """My non-docstring
    This should not be touched."""

    """More stuff
    that should not be
    touched	"""'''
outstring='''def foo():
    """Hello foo and this is a docstring.

    More stuff.
    """
    x = """My non-docstring
    This should not be touched."""

    """More stuff
    that should not be
    touched	"""'''

[syntax_error]
instring='''"""
'''
outstring='''"""
'''

[slash_r]
instring='''"""\r'''
outstring='''"""\r'''

[slash_r_slash_n]
instring='''"""\r\n'''
outstring='''"""\r\n'''
